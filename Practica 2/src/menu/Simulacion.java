/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package menu;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import javax.swing.*;

import menu.*;

/**
 *
 * @author ricar
 */
public class Simulacion extends javax.swing.JFrame implements KeyListener{
    private int contador = 0;
    private Timer timer;
    Objetos[] objetos;
    MateriaPrima[] bolitas = new MateriaPrima[29];
    int contadorBolitas = 0; // Variable para contar el número de bolitas generadas

    public Simulacion() {
        initComponents();
        Color fondoRojo = new Color(255, 166, 166);
        Color fondoAzul = new Color(116, 205, 252);
        Color fondoVerde = new Color(164, 252, 116);
        Color fondoMorado = new Color(232, 168, 255);
        Color predeterminado = new Color(255, 241, 168);
        Color proc = new Color(0, 0, 255);

        this.objetos = new Objetos[4];
        this.objetos[0] = new Objetos(fondoMorado, 100, 50,25);
        this.objetos[1] = new Objetos(fondoRojo, 100, 275,30);
        this.objetos[2] = new Objetos(fondoVerde, 400, 50,10);
        this.objetos[3] = new Objetos(fondoAzul, 400, 275,5);

        this.add(this.objetos[0]);
        this.add(this.objetos[1]);
        this.add(this.objetos[2]);
        this.add(this.objetos[3]);

        // Crear un temporizador que genere las bolitas cada segudo
        Timer timer = new Timer(1000, e -> {
            if (contadorBolitas < 29) {
                this.bolitas[contadorBolitas] = new MateriaPrima(predeterminado, pIniciox(), pInicioy(), 10000, 400, 275);
                this.add(this.bolitas[contadorBolitas].getBolita());
                Container container = getContentPane();
                container.setComponentZOrder(this.bolitas[contadorBolitas].getBolita(),0);
                contadorBolitas++;
            }





        });
        timer.start();
      
    }

        //produccion a inventario






    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        inicio = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        inicio.setText("Inicio");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(692, Short.MAX_VALUE)
                .addComponent(inicio)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(358, Short.MAX_VALUE)
                .addComponent(inicio)
                .addGap(114, 114, 114))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
       
    }//GEN-LAST:event_formWindowOpened

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formMousePressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
       timer = new Timer(1000, new ActionListener() { // Crea un temporizador que se ejecutará cada 1000ms (1 segundo)
            @Override
            public void actionPerformed(ActionEvent e) {
                if (contador <= 28) { // Crea las figuras mientras el contador sea menor o igual a 28
                    bolitas[contador].setPosicionX(objetos[0].getX());
                    bolitas[contador].setPosicionY(objetos[0].getY());
                    bolitas[contador].start();
                    contador++;
                } else {
                    timer.stop(); // Detiene el temporizador cuando ya se crearon todas las figuras
                }
            }
        });
        timer.start();




    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Simulacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        

        
        
        
        
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Simulacion().setVisible(true);
                
            }
        });
    }

    void paintComponent(Graphics g) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyPressed(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void keyReleased(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel inicio;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

   public int pIniciox(){
       return inicio.getX();
   }
   public int pInicioy(){
       return inicio.getY();
   }

}
